import { Options } from './options';
import { Table } from './table';
import { TableRow } from './table-row';
/**
 * Splits a text into cells.
 *
 * @private
 */
export declare const _splitCells: (text: string) => string[];
/**
 * Reads a table row.
 *
 * @private
 * @param text - A text.
 * @param [leftMarginRegex=/^\s*$/] - A regular expression object that matches left margin.
 */
export declare const _readRow: (text: string, leftMarginRegex?: RegExp) => TableRow;
/**
 * Creates a regex source string of margin character class.
 *
 * @private
 * @param chars - A set of additional margin characters.
 * A pipe `|`, a backslash `\`, and a backquote will be ignored.
 * @return A regex source string.
 */
export declare const marginRegexSrc: (chars: Set<string>) => string;
/**
 * Creates a regular expression object that matches margin of tables.
 *
 * @private
 * @param chars - A set of additional margin characters.
 * A pipe `|`, a backslash `\`, and a backquote will be ignored.
 * @return An regular expression object that matches margin of tables.
 */
export declare const _marginRegex: (chars: Set<string>) => RegExp;
/**
 * Reads a table from lines.
 *
 * @private
 * @param lines - An array of texts, each text represents a row.
 * @param options - An object containing options for parsing.
 * @returns The table read from the lines.
 */
export declare const readTable: (lines: string[], options: Options) => Table;
