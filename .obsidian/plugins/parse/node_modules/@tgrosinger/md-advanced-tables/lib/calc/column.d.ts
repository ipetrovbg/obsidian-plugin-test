import { Result } from '../neverthrow/neverthrow';
import { Table } from '../table';
import { Cell, ValueProvider } from './ast_utils';
import { Value } from './results';
import { IToken } from 'ebnf';
export declare const newColumn: (ast: IToken, table: Table) => Result<Column, Error>;
export declare abstract class Column implements ValueProvider {
    getValue: (table: Table, currentCell: Cell) => Result<Value, Error>;
    abstract getIndex(currentCell: Cell): number;
    abstract getAbsoluteIndex(): Result<number, Error>;
}
export declare class AbsoluteColumn extends Column {
    index: number;
    constructor(ast: IToken, table: Table);
    getIndex: (currentCell: Cell) => number;
    getAbsoluteIndex: () => Result<number, Error>;
}
