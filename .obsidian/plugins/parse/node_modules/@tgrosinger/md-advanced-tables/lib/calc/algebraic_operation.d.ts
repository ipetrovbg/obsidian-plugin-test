import { Table } from '..';
import { Result } from '../neverthrow/neverthrow';
import { Cell, ValueProvider } from './ast_utils';
import { Value } from './results';
import { IToken } from 'ebnf';
export declare class AlgebraicOperation implements ValueProvider {
    private readonly leftSource;
    private readonly rightSource;
    private readonly operator;
    constructor(ast: IToken, table: Table);
    getValue: (table: Table, cell: Cell) => Result<Value, Error>;
    /**
     * withCellAndRange aids in performing a numeric operation on cells in a
     * table where at least one of the two operands is a single cell. Optionally,
     * the two sides of the operation can be swapped, so the single cell is
     * always on the right.
     */
    private readonly withCellAndRange;
    private readonly add;
    private readonly subtract;
    private readonly multiply;
    private readonly divide;
}
